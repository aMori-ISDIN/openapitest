{
  "openapi": "3.0.1",
  "info": {
    "title": "Lightning Platform REST API",
    "description": "REST API provides you with programmatic access to your data in Salesforce. The flexibility and scalability of REST API make it an excellent choice for integrating Salesforce into your applications and for performing complex operations on a large scale. You can use REST API tools to create, manipulate, and search data in Salesforce by sending HTTP requests to endpoints in Salesforce. Depending on where you send requests, you access and operate on different pieces of information, called resources. Resources include records, query results, metadata, and more.",
    "version": "62.0"
  },
  "servers": [
    {
      "url": "https://embraceisdin--sbfull.sandbox.my.salesforce.com/services/data/v62.0",
      "description": "STAGING/FULL"
    },
    {
      "url": "https://embraceisdin--leadclicdv.sandbox.my.salesforce.com/services/data/v62.0",
      "description": "DEV"
    }
  ],
  "security": [
    {
      "oAuth2": []
    }
  ],
  "paths": {
    "/services/oauth2/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Retrieve OAuth 2.0 Token",
        "description": "Obtain an access token using the Client Credentials flow.\nUse this token to authenticate API requests to Salesforce.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "OAuth 2.0 grant type for client credentials.",
                    "example": "client_credentials"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Salesforce connected app Client ID.",
                    "example": "your-client-id"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Salesforce connected app Client Secret.",
                    "example": "your-client-secret"
                  },
                  "scope": {
                    "type": "string",
                    "description": "Scopes required for the access token. \nOptional; leave empty for default permissions.\n",
                    "example": "api refresh_token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access token retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "The access token for making API calls.",
                      "example": "00D000000000XYZ!AR0AQJ5NGR76vQFv..."
                    },
                    "instance_url": {
                      "type": "string",
                      "description": "The Salesforce instance URL to make API requests.",
                      "example": "https://your-instance.salesforce.com"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of the token (e.g., Bearer).",
                      "example": "Bearer"
                    },
                    "issued_at": {
                      "type": "string",
                      "description": "Timestamp when the token was issued (in milliseconds).",
                      "example": "1609459200000"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Scopes associated with the access token.",
                      "example": "api refresh_token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error code.",
                      "example": "invalid_client"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Human-readable error description.",
                      "example": "Client authentication failed."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error code.",
                      "example": "invalid_client"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Human-readable error description.",
                      "example": "Client authentication failed."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/protected-resource": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Access a Salesforce Protected Resource",
        "description": "Use the access token to call a protected Salesforce resource.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer <access_token>"
            },
            "description": "Bearer access token retrieved from /token endpoint."
          }
        ],
        "responses": {
          "200": {
            "description": "Resource accessed successfully."
          },
          "401": {
            "description": "Invalid or expired token."
          }
        }
      }
    },
    "/sobjects/Case": {
      "description": "Describes the individual metadata for the specified object. Can also be used to create a new record for a given object. For example, this can be used to retrieve the metadata for the Account object using the GET method, or create a new Account object using the POST method.",
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Create a new case.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Header which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "Apellidos": {
                    "default": "Estado",
                    "description": "Maps to Salesforce field: nan",
                    "type": "string"
                  },
                  "ContactEmail": {
                    "default": "string",
                    "description": "Maps to Salesforce field: Correo electrónico del contacto",
                    "type": "string"
                  },
                  "Formaciones": {
                    "default": ".nan",
                    "description": "Maps to Salesforce field: Grupo Love Isdin",
                    "type": "string"
                  },
                  "Mensaje ": {
                    "default": "Prioridad",
                    "description": "Maps to Salesforce field: Descripción",
                    "type": "string"
                  },
                  "Mi cuenta": {
                    "default": ".nan",
                    "description": "Maps to Salesforce field: Grupo Love Isdin",
                    "type": "string"
                  },
                  "Nombre": {
                    "default": "Org ventas",
                    "description": "Maps to Salesforce field: Nombre del contacto",
                    "type": "string"
                  },
                  "Otros": {
                    "default": ".nan",
                    "description": "Maps to Salesforce field: Grupo Love Isdin",
                    "type": "string"
                  },
                  "Pedido__c": {
                    "default": "OrderID",
                    "description": "Maps to Salesforce field: Grupo Pedidos",
                    "type": "string"
                  },
                  "Productos": {
                    "default": ".nan",
                    "description": "Maps to Salesforce field: Grupo Love Isdin",
                    "type": "string"
                  },
                  "Teléfono": {
                    "default": "Canal",
                    "description": "Maps to Salesforce field: Teléfono del contacto",
                    "type": "string"
                  },
                  "Tema": {
                    "default": "Tienda",
                    "description": "Maps to Salesforce field: Asunto",
                    "type": "string"
                  },
                  "Tipo de consulta": {
                    "default": ".nan",
                    "description": "Maps to Salesforce field: Informe Salesforce",
                    "type": "string"
                  }
                },
                "required": [
                  "Nombre",
                  "Apellidos",
                  "Correo electrónico",
                  "Teléfono",
                  "Mensaje "
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Status Code 201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "statusCode": {
                            "type": "string"
                          },
                          "extendedErrorDetails": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extendedErrorCode": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "statusCode": {
                            "type": "string"
                          },
                          "extendedDetails": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extendedErrorCode": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "infos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "statusCode": {
                            "type": "string"
                          },
                          "extendedDetails": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extendedErrorCode": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Status Code 400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Status Code 401",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Status Code 403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Status Code 404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Status Code 405",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "415": {
            "description": "Status Code 415",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Status Code 500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Status Code 503",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sobjects/Case/{id}": {
      "description": "Accesses records based on the specified object ID. Retrieves, updates, or deletes records. This resource can also be used to retrieve field values. Use the GET method to retrieve records or fields, the DELETE method to delete records, and the PATCH method to update records.",
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Retrieve a specific case by ID.",
        "security": [
          {
            "oAuth2": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the object. For example, 001R0000005hDFYIA2. A required path parameter for all methods (GET, PATCH, and DELETE).",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "A comma-delimited list of fields to get values for. For example, ?fields=name,description,numberofemployees,industry. An optional query parameter that can only be used with GET.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "An optional header specifying a date and time. The request returns records that have been modified after that date and time. The format is EEE, dd MMM yyyy HH:mm:ss z For example: If-Modified-Since: Mon, 30 Nov 2020 08:34:54 MST.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "An optional header specifying a date and time. The request returns records that have not been modified after that date and time. The format is EEE, dd MMM yyyy HH:mm:ss z For example: If-Unmodified-Since: Mon, 30 Nov 2020 08:34:54 MST.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status Code 200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Id": {
                      "type": "string"
                    },
                    "IsDeleted": {
                      "type": "boolean",
                      "description": "Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is Deleted."
                    },
                    "MasterRecordId": {
                      "type": "string",
                      "description": "If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If this object was deleted for any other reason, or has not been deleted, the value is null."
                    },
                    "CaseNumber": {
                      "type": "string",
                      "description": "Assigned automatically when each case is inserted. It can't be set directly, and it can't be modified after the case is created."
                    },
                    "ContactId": {
                      "type": "string",
                      "description": "ID of the associated contact."
                    },
                    "AccountId": {
                      "type": "string",
                      "description": "ID of the account associated with this case."
                    },
                    "AssetId": {
                      "type": "string"
                    },
                    "SourceId": {
                      "type": "string",
                      "description": "The ID of the social post source."
                    },
                    "BusinessHoursId": {
                      "type": "string",
                      "description": "ID of the business hours associated with this case."
                    },
                    "ParentId": {
                      "type": "string",
                      "description": "The ID of the parent case in the hierarchy. The label is Parent Case."
                    },
                    "SuppliedName": {
                      "type": "string",
                      "description": "The name that was entered when the case was created. Label is Name."
                    },
                    "SuppliedEmail": {
                      "type": "string",
                      "description": "The email address that was entered when the case was created. Label is Email. If your organization has an active auto-response rule, SuppliedEmail is required when creating a case via the API. Auto-response rules use the email in the contact specified by ContactId. If no email address is in the contact record, the email specified here is used."
                    },
                    "SuppliedPhone": {
                      "type": "string",
                      "description": "The phone number that was entered when the case was created. Label is Phone."
                    },
                    "SuppliedCompany": {
                      "type": "string",
                      "description": "The company name that was entered when the case was created. Label is Company."
                    },
                    "Type": {
                      "type": "string",
                      "description": "The type of case, such as Feature Request or Question."
                    },
                    "RecordTypeId": {
                      "type": "string",
                      "description": "ID of the record type assigned to this object."
                    },
                    "Status": {
                      "type": "string",
                      "description": "The status of the case, such as New, Closed, or Escalated. This field directly controls the IsClosed flag. Each predefined Status value implies an IsClosed flag value. For more information, see CaseStatus."
                    },
                    "Reason": {
                      "type": "string",
                      "description": "The reason why the case was created, such as Instructions not clear, or User didn’t attend training."
                    },
                    "Origin": {
                      "type": "string",
                      "description": "The source of the case, such as Email, Phone, or Web. Label is Case Origin."
                    },
                    "Language": {
                      "type": "string",
                      "description": "The language of the case. This field is available in all Enterprise, Performance, and Unlimited orgs with the Service Cloud. Out of the box, it's used only by Einstein Case Classification."
                    },
                    "Subject": {
                      "type": "string",
                      "description": "The subject of the case. Limit: 255 characters."
                    },
                    "Priority": {
                      "type": "string",
                      "description": "The importance or urgency of the case, such as High, Medium, or Low."
                    },
                    "Description": {
                      "type": "string",
                      "description": "A text description of the case. Limit: 32 KB."
                    },
                    "IsClosed": {
                      "type": "boolean",
                      "description": "Indicates whether the case is closed (true) or open (false). This field is controlled by the Status field; it can't be set directly. Label is Closed."
                    },
                    "ClosedDate": {
                      "type": "string",
                      "description": "The date and time when the case was closed.",
                      "format": "date-time"
                    },
                    "IsEscalated": {
                      "type": "boolean",
                      "description": "Indicates whether the case has been escalated (true) or not. A case's escalated state does not affect how you can use a case, or whether you can query, delete, or update it. You can set this flag via the API. Label is Escalated."
                    },
                    "OwnerId": {
                      "type": "string",
                      "description": "ID of the contact who owns the case."
                    },
                    "IsClosedOnCreate": {
                      "type": "boolean",
                      "description": "Indicates whether the case was closed at the same time that it was created (true) or not (false). This flag is read-only and is automatically set when a record is created. It can't be set to true unless the IsClosed flag is also true."
                    },
                    "CreatedDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "CreatedById": {
                      "type": "string"
                    },
                    "LastModifiedDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "LastModifiedById": {
                      "type": "string"
                    },
                    "SystemModstamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ContactPhone": {
                      "type": "string",
                      "description": "Telephone number for the contact. Label is Contact Phone. This field is available in API version 38.0 and later."
                    },
                    "ContactMobile": {
                      "type": "string",
                      "description": "Mobile telephone number for the contact. Label is Contact Mobile. This field is available in API version 38.0 and later."
                    },
                    "ContactEmail": {
                      "type": "string",
                      "description": "Email address for the contact. The Case.ContactEmail field displays the Email field on the contact that is referenced by Case.ContactId. Label is Contact Email. This field is available in API version 38.0 and later."
                    },
                    "ContactFax": {
                      "type": "string",
                      "description": "Fax number for the contact. Label is Contact Fax. This field is available in API version 38.0 and later."
                    },
                    "Comments": {
                      "type": "string",
                      "description": "Used to insert a new CaseComment. Email textarea has a length of 4000 chars."
                    },
                    "LastViewedDate": {
                      "type": "string",
                      "description": "The timestamp when the current user last viewed this record or list view. If this value is null, the user might have only accessed this record or list view (LastReferencedDate) but not viewed it.",
                      "format": "date-time"
                    },
                    "LastReferencedDate": {
                      "type": "string",
                      "description": "The timestamp when the current user last accessed this record, a record related to this record, or a list view.",
                      "format": "date-time"
                    },
                    "Abono__c": {
                      "type": "string"
                    },
                    "Agencia__c": {
                      "type": "string"
                    },
                    "Agrupacion__c": {
                      "type": "string"
                    },
                    "Area_Nivel_3__c": {
                      "type": "string"
                    },
                    "Canal_Venta__c": {
                      "type": "string"
                    },
                    "Cargo_Agencia__c": {
                      "type": "string"
                    },
                    "Carta_Incidencia__c": {
                      "type": "string"
                    },
                    "Caso_Reportado_por__c": {
                      "type": "string"
                    },
                    "Comentario_externo__c": {
                      "type": "string"
                    },
                    "Delegado__c": {
                      "type": "string"
                    },
                    "Destinatario_Mercancia__c": {
                      "type": "string"
                    },
                    "Devolucion__c": {
                      "type": "string"
                    },
                    "Direccion_contacto_caso__c": {
                      "type": "string"
                    },
                    "Email_contacto_caso__c": {
                      "type": "string"
                    },
                    "Email_de_email_to_case__c": {
                      "type": "string"
                    },
                    "Entrega_Parcial__c": {
                      "type": "string"
                    },
                    "Entrega_Reposicion__c": {
                      "type": "string"
                    },
                    "Entrega__c": {
                      "type": "string"
                    },
                    "Estado_Cliente__c": {
                      "type": "string"
                    },
                    "Estado_Interno__c": {
                      "type": "string"
                    },
                    "Expedicion__c": {
                      "type": "string"
                    },
                    "Factura__c": {
                      "type": "string"
                    },
                    "ID_MirrorDestination__c": {
                      "type": "string"
                    },
                    "ID_SAP_Cuenta__c": {
                      "type": "string"
                    },
                    "ID_SAP_Destinatario_Mercanc_a__c": {
                      "type": "string"
                    },
                    "Lead__c": {
                      "type": "string"
                    },
                    "Marca__c": {
                      "type": "string"
                    },
                    "MyExtID__c": {
                      "type": "string"
                    },
                    "Nombre_contacto_caso__c": {
                      "type": "string"
                    },
                    "Pedido__c": {
                      "type": "string"
                    },
                    "Problema_reportado__c": {
                      "type": "string"
                    },
                    "Referencia_SAP__c": {
                      "type": "string"
                    },
                    "Referencia__c": {
                      "type": "string"
                    },
                    "ASIN__c": {
                      "type": "string"
                    },
                    "Remesa__c": {
                      "type": "string"
                    },
                    "Resuelto_por__c": {
                      "type": "string"
                    },
                    "SLA__c": {
                      "type": "string"
                    },
                    "Serie__c": {
                      "type": "string"
                    },
                    "Soporte_Logistica__c": {
                      "type": "string"
                    },
                    "Soporte_Nivel_1__c": {
                      "type": "string"
                    },
                    "Soporte_Nivel_2__c": {
                      "type": "string"
                    },
                    "Soporte_Nivel_3__c": {
                      "type": "string"
                    },
                    "Subtipo__c": {
                      "type": "string"
                    },
                    "Telefono_contacto_caso__c": {
                      "type": "string"
                    },
                    "Tiempo_de_gestion__c": {
                      "type": "number"
                    },
                    "Tienda__c": {
                      "type": "string"
                    },
                    "Tipificacion__c": {
                      "type": "string"
                    },
                    "Tipo_Cuenta__c": {
                      "type": "string"
                    },
                    "Visibilidad_Cliente__c": {
                      "type": "string"
                    },
                    "Correos_entrada__c": {
                      "type": "string"
                    },
                    "Dia_de_la_semana__c": {
                      "type": "number"
                    },
                    "Correos_entrada_AT__c": {
                      "type": "string"
                    },
                    "Emails_entrada__c": {
                      "type": "string"
                    },
                    "ReferenciaCaso__c": {
                      "type": "string"
                    },
                    "Org_Ventas__c": {
                      "type": "string"
                    },
                    "EMB_Country__c": {
                      "type": "string"
                    },
                    "EMB_PharmacovigilanceId__c": {
                      "type": "string"
                    },
                    "EMB_Specialty__c": {
                      "type": "string"
                    },
                    "EMB_Statement__c": {
                      "type": "boolean"
                    },
                    "EMB_Challenge__c": {
                      "type": "string"
                    },
                    "EMB_Batch__c": {
                      "type": "string"
                    },
                    "EMB_BusinessUnit__c": {
                      "type": "string"
                    },
                    "EMB_ResponseTo__c": {
                      "type": "string"
                    },
                    "EMB_StatusLevel1__c": {
                      "type": "string"
                    },
                    "EMB_StatusLevel2__c": {
                      "type": "string"
                    },
                    "Referencia_aplicada__c": {
                      "type": "string"
                    },
                    "Amazon_Site__c": {
                      "type": "string"
                    },
                    "Brand__c": {
                      "type": "string"
                    },
                    "Num_of_comments__c": {
                      "type": "number"
                    },
                    "Photo_1__c": {
                      "type": "string"
                    },
                    "Question_URL__c": {
                      "type": "string"
                    },
                    "Rating__c": {
                      "type": "number"
                    },
                    "Reference_Id__c": {
                      "type": "string"
                    },
                    "Review_Rating__c": {
                      "type": "number"
                    },
                    "Review_Response__c": {
                      "type": "string"
                    },
                    "Review_URL__c": {
                      "type": "string"
                    },
                    "Review_or_Question_Date__c": {
                      "type": "string",
                      "format": "date"
                    },
                    "Reviewer__c": {
                      "type": "string"
                    },
                    "Transaction_Date__c": {
                      "type": "string",
                      "format": "date"
                    },
                    "Verified_Purchase__c": {
                      "type": "boolean"
                    },
                    "photo_2__c": {
                      "type": "string"
                    },
                    "revue__ASIN__c": {
                      "type": "string"
                    },
                    "revue__Consumer_Name__c": {
                      "type": "string"
                    },
                    "revue__Domain__c": {
                      "type": "string"
                    },
                    "revue__External_Id__c": {
                      "type": "string"
                    },
                    "revue__External_Reference_Id__c": {
                      "type": "string"
                    },
                    "revue__Origin_Icon__c": {
                      "type": "string"
                    },
                    "revue__Place__c": {
                      "type": "string"
                    },
                    "revue__Product_Image__c": {
                      "type": "string"
                    },
                    "revue__Product__c": {
                      "type": "string"
                    },
                    "revue__Question__c": {
                      "type": "string"
                    },
                    "revue__Rating__c": {
                      "type": "string"
                    },
                    "revue__Review_Origin_Icon__c": {
                      "type": "string"
                    },
                    "revue__Review_Rating__c": {
                      "type": "string"
                    },
                    "revue__Review__c": {
                      "type": "string"
                    },
                    "revue__Reviewer_Name__c": {
                      "type": "string"
                    },
                    "revue__Star_Rating__c": {
                      "type": "string"
                    },
                    "revue__Store_Number__c": {
                      "type": "string"
                    },
                    "revue__iTunes_App_Id__c": {
                      "type": "string"
                    },
                    "ChatSubject__c": {
                      "type": "string"
                    },
                    "Order_Date__c": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "Queja__c": {
                      "type": "boolean"
                    },
                    "Shipping_Method__c": {
                      "type": "string"
                    },
                    "Social_Media_Contact_Case__c": {
                      "type": "string"
                    },
                    "QR_Code__c": {
                      "type": "string"
                    },
                    "NoSurvey__c": {
                      "type": "boolean"
                    },
                    "FromSalesRep__c": {
                      "type": "boolean"
                    },
                    "EmailAccount__c": {
                      "type": "string"
                    },
                    "Name_Account__c": {
                      "type": "string"
                    },
                    "SAM_Email__c": {
                      "type": "string"
                    },
                    "SC_Safety_ID__c": {
                      "type": "string"
                    },
                    "C_digo_Nacional__c": {
                      "type": "string"
                    },
                    "Codigo_Nacional_Texto__c": {
                      "type": "string"
                    },
                    "Replacement__c": {
                      "type": "string"
                    },
                    "Refund__c": {
                      "type": "string"
                    },
                    "talkdesk__Auto_Pop_up_Case__c": {
                      "type": "boolean"
                    },
                    "talkdesk__Pop_Up_Destination__c": {
                      "type": "string"
                    },
                    "Manager_Email__c": {
                      "type": "string"
                    },
                    "Comentarios__c": {
                      "type": "string"
                    },
                    "Technical_error__c": {
                      "type": "boolean"
                    },
                    "Data_missing__c": {
                      "type": "boolean"
                    },
                    "Hashtag__c": {
                      "type": "string"
                    },
                    "LAM_Segment_de_la_Account__c": {
                      "type": "string"
                    },
                    "Product_WTC__c": {
                      "type": "string"
                    },
                    "Experience__c": {
                      "type": "string"
                    },
                    "saved_component__c": {
                      "type": "boolean"
                    },
                    "OrigenIntegracion__c": {
                      "type": "string"
                    },
                    "spr_sf__Sprinklr_Case_Number__c": {
                      "type": "number"
                    },
                    "SprinklrCategory__c": {
                      "type": "string"
                    },
                    "Account_Black_List__c": {
                      "type": "boolean"
                    },
                    "Client_Potential__c": {
                      "type": "string"
                    },
                    "CombinedEmailSummary__c": {
                      "type": "string",
                      "description": "Summary of all emails associated with the case"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Represents a case, which is a customer issue or problem."
                }
              }
            }
          },
          "400": {
            "description": "Status Code 400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Status Code 401",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Status Code 403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Status Code 404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Status Code 500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Case"
        ],
        "summary": "Update a specific case.",
        "security": [
          {
            "oAuth2": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the object. For example, 001R0000005hDFYIA2. A required path parameter for all methods (GET, PATCH, and DELETE).",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Header which can only be used with POST, specifying the format for the request and response. Possible choices are: Content-Type: application/json Content-Type: application/xml",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "string"
                  },
                  "IsDeleted": {
                    "type": "boolean",
                    "description": "Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is Deleted."
                  },
                  "MasterRecordId": {
                    "type": "string",
                    "description": "If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If this object was deleted for any other reason, or has not been deleted, the value is null."
                  },
                  "CaseNumber": {
                    "type": "string",
                    "description": "Assigned automatically when each case is inserted. It can't be set directly, and it can't be modified after the case is created."
                  },
                  "ContactId": {
                    "type": "string",
                    "description": "ID of the associated contact."
                  },
                  "AccountId": {
                    "type": "string",
                    "description": "ID of the account associated with this case."
                  },
                  "AssetId": {
                    "type": "string"
                  },
                  "SourceId": {
                    "type": "string",
                    "description": "The ID of the social post source."
                  },
                  "BusinessHoursId": {
                    "type": "string",
                    "description": "ID of the business hours associated with this case."
                  },
                  "ParentId": {
                    "type": "string",
                    "description": "The ID of the parent case in the hierarchy. The label is Parent Case."
                  },
                  "SuppliedName": {
                    "type": "string",
                    "description": "The name that was entered when the case was created. Label is Name."
                  },
                  "SuppliedEmail": {
                    "type": "string",
                    "description": "The email address that was entered when the case was created. Label is Email. If your organization has an active auto-response rule, SuppliedEmail is required when creating a case via the API. Auto-response rules use the email in the contact specified by ContactId. If no email address is in the contact record, the email specified here is used."
                  },
                  "SuppliedPhone": {
                    "type": "string",
                    "description": "The phone number that was entered when the case was created. Label is Phone."
                  },
                  "SuppliedCompany": {
                    "type": "string",
                    "description": "The company name that was entered when the case was created. Label is Company."
                  },
                  "Type": {
                    "type": "string",
                    "description": "The type of case, such as Feature Request or Question."
                  },
                  "RecordTypeId": {
                    "type": "string",
                    "description": "ID of the record type assigned to this object."
                  },
                  "Status": {
                    "type": "string",
                    "description": "The status of the case, such as New, Closed, or Escalated. This field directly controls the IsClosed flag. Each predefined Status value implies an IsClosed flag value. For more information, see CaseStatus."
                  },
                  "Reason": {
                    "type": "string",
                    "description": "The reason why the case was created, such as Instructions not clear, or User didn’t attend training."
                  },
                  "Origin": {
                    "type": "string",
                    "description": "The source of the case, such as Email, Phone, or Web. Label is Case Origin."
                  },
                  "Language": {
                    "type": "string",
                    "description": "The language of the case. This field is available in all Enterprise, Performance, and Unlimited orgs with the Service Cloud. Out of the box, it's used only by Einstein Case Classification."
                  },
                  "Subject": {
                    "type": "string",
                    "description": "The subject of the case. Limit: 255 characters."
                  },
                  "Priority": {
                    "type": "string",
                    "description": "The importance or urgency of the case, such as High, Medium, or Low."
                  },
                  "Description": {
                    "type": "string",
                    "description": "A text description of the case. Limit: 32 KB."
                  },
                  "IsClosed": {
                    "type": "boolean",
                    "description": "Indicates whether the case is closed (true) or open (false). This field is controlled by the Status field; it can't be set directly. Label is Closed."
                  },
                  "ClosedDate": {
                    "type": "string",
                    "description": "The date and time when the case was closed.",
                    "format": "date-time"
                  },
                  "IsEscalated": {
                    "type": "boolean",
                    "description": "Indicates whether the case has been escalated (true) or not. A case's escalated state does not affect how you can use a case, or whether you can query, delete, or update it. You can set this flag via the API. Label is Escalated."
                  },
                  "OwnerId": {
                    "type": "string",
                    "description": "ID of the contact who owns the case."
                  },
                  "IsClosedOnCreate": {
                    "type": "boolean",
                    "description": "Indicates whether the case was closed at the same time that it was created (true) or not (false). This flag is read-only and is automatically set when a record is created. It can't be set to true unless the IsClosed flag is also true."
                  },
                  "CreatedDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "CreatedById": {
                    "type": "string"
                  },
                  "LastModifiedDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "LastModifiedById": {
                    "type": "string"
                  },
                  "SystemModstamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "ContactPhone": {
                    "type": "string",
                    "description": "Telephone number for the contact. Label is Contact Phone. This field is available in API version 38.0 and later."
                  },
                  "ContactMobile": {
                    "type": "string",
                    "description": "Mobile telephone number for the contact. Label is Contact Mobile. This field is available in API version 38.0 and later."
                  },
                  "ContactEmail": {
                    "type": "string",
                    "description": "Email address for the contact. The Case.ContactEmail field displays the Email field on the contact that is referenced by Case.ContactId. Label is Contact Email. This field is available in API version 38.0 and later."
                  },
                  "ContactFax": {
                    "type": "string",
                    "description": "Fax number for the contact. Label is Contact Fax. This field is available in API version 38.0 and later."
                  },
                  "Comments": {
                    "type": "string",
                    "description": "Used to insert a new CaseComment. Email textarea has a length of 4000 chars."
                  },
                  "LastViewedDate": {
                    "type": "string",
                    "description": "The timestamp when the current user last viewed this record or list view. If this value is null, the user might have only accessed this record or list view (LastReferencedDate) but not viewed it.",
                    "format": "date-time"
                  },
                  "LastReferencedDate": {
                    "type": "string",
                    "description": "The timestamp when the current user last accessed this record, a record related to this record, or a list view.",
                    "format": "date-time"
                  },
                  "Abono__c": {
                    "type": "string"
                  },
                  "Agencia__c": {
                    "type": "string"
                  },
                  "Agrupacion__c": {
                    "type": "string"
                  },
                  "Area_Nivel_3__c": {
                    "type": "string"
                  },
                  "Canal_Venta__c": {
                    "type": "string"
                  },
                  "Cargo_Agencia__c": {
                    "type": "string"
                  },
                  "Carta_Incidencia__c": {
                    "type": "string"
                  },
                  "Caso_Reportado_por__c": {
                    "type": "string"
                  },
                  "Comentario_externo__c": {
                    "type": "string"
                  },
                  "Delegado__c": {
                    "type": "string"
                  },
                  "Destinatario_Mercancia__c": {
                    "type": "string"
                  },
                  "Devolucion__c": {
                    "type": "string"
                  },
                  "Direccion_contacto_caso__c": {
                    "type": "string"
                  },
                  "Email_contacto_caso__c": {
                    "type": "string"
                  },
                  "Email_de_email_to_case__c": {
                    "type": "string"
                  },
                  "Entrega_Parcial__c": {
                    "type": "string"
                  },
                  "Entrega_Reposicion__c": {
                    "type": "string"
                  },
                  "Entrega__c": {
                    "type": "string"
                  },
                  "Estado_Cliente__c": {
                    "type": "string"
                  },
                  "Estado_Interno__c": {
                    "type": "string"
                  },
                  "Expedicion__c": {
                    "type": "string"
                  },
                  "Factura__c": {
                    "type": "string"
                  },
                  "ID_MirrorDestination__c": {
                    "type": "string"
                  },
                  "ID_SAP_Cuenta__c": {
                    "type": "string"
                  },
                  "ID_SAP_Destinatario_Mercanc_a__c": {
                    "type": "string"
                  },
                  "Lead__c": {
                    "type": "string"
                  },
                  "Marca__c": {
                    "type": "string"
                  },
                  "MyExtID__c": {
                    "type": "string"
                  },
                  "Nombre_contacto_caso__c": {
                    "type": "string"
                  },
                  "Pedido__c": {
                    "type": "string"
                  },
                  "Problema_reportado__c": {
                    "type": "string"
                  },
                  "Referencia_SAP__c": {
                    "type": "string"
                  },
                  "Referencia__c": {
                    "type": "string"
                  },
                  "ASIN__c": {
                    "type": "string"
                  },
                  "Remesa__c": {
                    "type": "string"
                  },
                  "Resuelto_por__c": {
                    "type": "string"
                  },
                  "SLA__c": {
                    "type": "string"
                  },
                  "Serie__c": {
                    "type": "string"
                  },
                  "Soporte_Logistica__c": {
                    "type": "string"
                  },
                  "Soporte_Nivel_1__c": {
                    "type": "string"
                  },
                  "Soporte_Nivel_2__c": {
                    "type": "string"
                  },
                  "Soporte_Nivel_3__c": {
                    "type": "string"
                  },
                  "Subtipo__c": {
                    "type": "string"
                  },
                  "Telefono_contacto_caso__c": {
                    "type": "string"
                  },
                  "Tiempo_de_gestion__c": {
                    "type": "number"
                  },
                  "Tienda__c": {
                    "type": "string"
                  },
                  "Tipificacion__c": {
                    "type": "string"
                  },
                  "Tipo_Cuenta__c": {
                    "type": "string"
                  },
                  "Visibilidad_Cliente__c": {
                    "type": "string"
                  },
                  "Correos_entrada__c": {
                    "type": "string"
                  },
                  "Dia_de_la_semana__c": {
                    "type": "number"
                  },
                  "Correos_entrada_AT__c": {
                    "type": "string"
                  },
                  "Emails_entrada__c": {
                    "type": "string"
                  },
                  "ReferenciaCaso__c": {
                    "type": "string"
                  },
                  "Org_Ventas__c": {
                    "type": "string"
                  },
                  "EMB_Country__c": {
                    "type": "string"
                  },
                  "EMB_PharmacovigilanceId__c": {
                    "type": "string"
                  },
                  "EMB_Specialty__c": {
                    "type": "string"
                  },
                  "EMB_Statement__c": {
                    "type": "boolean"
                  },
                  "EMB_Challenge__c": {
                    "type": "string"
                  },
                  "EMB_Batch__c": {
                    "type": "string"
                  },
                  "EMB_BusinessUnit__c": {
                    "type": "string"
                  },
                  "EMB_ResponseTo__c": {
                    "type": "string"
                  },
                  "EMB_StatusLevel1__c": {
                    "type": "string"
                  },
                  "EMB_StatusLevel2__c": {
                    "type": "string"
                  },
                  "Referencia_aplicada__c": {
                    "type": "string"
                  },
                  "Amazon_Site__c": {
                    "type": "string"
                  },
                  "Brand__c": {
                    "type": "string"
                  },
                  "Num_of_comments__c": {
                    "type": "number"
                  },
                  "Photo_1__c": {
                    "type": "string"
                  },
                  "Question_URL__c": {
                    "type": "string"
                  },
                  "Rating__c": {
                    "type": "number"
                  },
                  "Reference_Id__c": {
                    "type": "string"
                  },
                  "Review_Rating__c": {
                    "type": "number"
                  },
                  "Review_Response__c": {
                    "type": "string"
                  },
                  "Review_URL__c": {
                    "type": "string"
                  },
                  "Review_or_Question_Date__c": {
                    "type": "string",
                    "format": "date"
                  },
                  "Reviewer__c": {
                    "type": "string"
                  },
                  "Transaction_Date__c": {
                    "type": "string",
                    "format": "date"
                  },
                  "Verified_Purchase__c": {
                    "type": "boolean"
                  },
                  "photo_2__c": {
                    "type": "string"
                  },
                  "revue__ASIN__c": {
                    "type": "string"
                  },
                  "revue__Consumer_Name__c": {
                    "type": "string"
                  },
                  "revue__Domain__c": {
                    "type": "string"
                  },
                  "revue__External_Id__c": {
                    "type": "string"
                  },
                  "revue__External_Reference_Id__c": {
                    "type": "string"
                  },
                  "revue__Origin_Icon__c": {
                    "type": "string"
                  },
                  "revue__Place__c": {
                    "type": "string"
                  },
                  "revue__Product_Image__c": {
                    "type": "string"
                  },
                  "revue__Product__c": {
                    "type": "string"
                  },
                  "revue__Question__c": {
                    "type": "string"
                  },
                  "revue__Rating__c": {
                    "type": "string"
                  },
                  "revue__Review_Origin_Icon__c": {
                    "type": "string"
                  },
                  "revue__Review_Rating__c": {
                    "type": "string"
                  },
                  "revue__Review__c": {
                    "type": "string"
                  },
                  "revue__Reviewer_Name__c": {
                    "type": "string"
                  },
                  "revue__Star_Rating__c": {
                    "type": "string"
                  },
                  "revue__Store_Number__c": {
                    "type": "string"
                  },
                  "revue__iTunes_App_Id__c": {
                    "type": "string"
                  },
                  "ChatSubject__c": {
                    "type": "string"
                  },
                  "Order_Date__c": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "Queja__c": {
                    "type": "boolean"
                  },
                  "Shipping_Method__c": {
                    "type": "string"
                  },
                  "Social_Media_Contact_Case__c": {
                    "type": "string"
                  },
                  "QR_Code__c": {
                    "type": "string"
                  },
                  "NoSurvey__c": {
                    "type": "boolean"
                  },
                  "FromSalesRep__c": {
                    "type": "boolean"
                  },
                  "EmailAccount__c": {
                    "type": "string"
                  },
                  "Name_Account__c": {
                    "type": "string"
                  },
                  "SAM_Email__c": {
                    "type": "string"
                  },
                  "SC_Safety_ID__c": {
                    "type": "string"
                  },
                  "C_digo_Nacional__c": {
                    "type": "string"
                  },
                  "Codigo_Nacional_Texto__c": {
                    "type": "string"
                  },
                  "Replacement__c": {
                    "type": "string"
                  },
                  "Refund__c": {
                    "type": "string"
                  },
                  "talkdesk__Auto_Pop_up_Case__c": {
                    "type": "boolean"
                  },
                  "talkdesk__Pop_Up_Destination__c": {
                    "type": "string"
                  },
                  "Manager_Email__c": {
                    "type": "string"
                  },
                  "Comentarios__c": {
                    "type": "string"
                  },
                  "Technical_error__c": {
                    "type": "boolean"
                  },
                  "Data_missing__c": {
                    "type": "boolean"
                  },
                  "Hashtag__c": {
                    "type": "string"
                  },
                  "LAM_Segment_de_la_Account__c": {
                    "type": "string"
                  },
                  "Product_WTC__c": {
                    "type": "string"
                  },
                  "Experience__c": {
                    "type": "string"
                  },
                  "saved_component__c": {
                    "type": "boolean"
                  },
                  "OrigenIntegracion__c": {
                    "type": "string"
                  },
                  "spr_sf__Sprinklr_Case_Number__c": {
                    "type": "number"
                  },
                  "SprinklrCategory__c": {
                    "type": "string"
                  },
                  "Account_Black_List__c": {
                    "type": "boolean"
                  },
                  "Client_Potential__c": {
                    "type": "string"
                  },
                  "CombinedEmailSummary__c": {
                    "type": "string",
                    "description": "Summary of all emails associated with the case"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  }
                },
                "description": "Represents a case, which is a customer issue or problem."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Status Code 204 (Successful Request without Content)"
          },
          "400": {
            "description": "Status Code 400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Status Code 401",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Status Code 403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Status Code 404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Status Code 500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Case"
        ],
        "summary": "Delete a specific case.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the object. For example, 001R0000005hDFYIA2. A required path parameter for all methods (GET, PATCH, and DELETE).",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status Code 204 (Successful Request without Content)"
          },
          "400": {
            "description": "Status Code 400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Status Code 401",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Status Code 403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Status Code 404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Status Code 500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "errorCode": {
                        "type": "string"
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "extendedErrorDetails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "extendedErrorCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sobjects/Account/IdPlataforma__c/{UUID}": {
      "patch": {
        "tags": [
          "Dermo (Beauty Advisors)"
        ],
        "summary": "Update the Dermoconsejera__c field of an Account",
        "description": "Updates the `Dermoconsejera__c` picklist field of a specific Account record in Salesforce.",
        "parameters": [
          {
            "name": "UUID",
            "in": "path",
            "description": "The unique identifier of the Account record.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON payload to update the `Dermoconsejera__c` field.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Dermoconsejera__c": {
                    "type": "string",
                    "description": "The new value for the `Dermoconsejera__c` picklist field.",
                    "example": "Active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Account field `Dermoconsejera__c` updated successfully."
          },
          "400": {
            "description": "Bad request. Verify the input data."
          },
          "401": {
            "description": "Unauthorized. Ensure your Salesforce authentication token is valid."
          },
          "404": {
            "description": "Account record not found for the given UUID."
          },
          "500": {
            "description": "Internal server error. Contact support if the issue persists."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CaseSObject": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "IsDeleted": {
            "type": "boolean",
            "description": "Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is Deleted."
          },
          "MasterRecordId": {
            "type": "string",
            "description": "If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If this object was deleted for any other reason, or has not been deleted, the value is null."
          },
          "CaseNumber": {
            "type": "string",
            "description": "Assigned automatically when each case is inserted. It can't be set directly, and it can't be modified after the case is created."
          },
          "ContactId": {
            "type": "string",
            "description": "ID of the associated contact."
          },
          "AccountId": {
            "type": "string",
            "description": "ID of the account associated with this case."
          },
          "AssetId": {
            "type": "string"
          },
          "SourceId": {
            "type": "string",
            "description": "The ID of the social post source."
          },
          "BusinessHoursId": {
            "type": "string",
            "description": "ID of the business hours associated with this case."
          },
          "ParentId": {
            "type": "string",
            "description": "The ID of the parent case in the hierarchy. The label is Parent Case."
          },
          "SuppliedName": {
            "type": "string",
            "description": "The name that was entered when the case was created. Label is Name."
          },
          "SuppliedEmail": {
            "type": "string",
            "description": "The email address that was entered when the case was created. Label is Email. If your organization has an active auto-response rule, SuppliedEmail is required when creating a case via the API. Auto-response rules use the email in the contact specified by ContactId. If no email address is in the contact record, the email specified here is used."
          },
          "SuppliedPhone": {
            "type": "string",
            "description": "The phone number that was entered when the case was created. Label is Phone."
          },
          "SuppliedCompany": {
            "type": "string",
            "description": "The company name that was entered when the case was created. Label is Company."
          },
          "Type": {
            "type": "string",
            "description": "The type of case, such as Feature Request or Question."
          },
          "RecordTypeId": {
            "type": "string",
            "description": "ID of the record type assigned to this object."
          },
          "Status": {
            "type": "string",
            "description": "The status of the case, such as New, Closed, or Escalated. This field directly controls the IsClosed flag. Each predefined Status value implies an IsClosed flag value. For more information, see CaseStatus."
          },
          "Reason": {
            "type": "string",
            "description": "The reason why the case was created, such as Instructions not clear, or User didn’t attend training."
          },
          "Origin": {
            "type": "string",
            "description": "The source of the case, such as Email, Phone, or Web. Label is Case Origin."
          },
          "Language": {
            "type": "string",
            "description": "The language of the case. This field is available in all Enterprise, Performance, and Unlimited orgs with the Service Cloud. Out of the box, it's used only by Einstein Case Classification."
          },
          "Subject": {
            "type": "string",
            "description": "The subject of the case. Limit: 255 characters."
          },
          "Priority": {
            "type": "string",
            "description": "The importance or urgency of the case, such as High, Medium, or Low."
          },
          "Description": {
            "type": "string",
            "description": "A text description of the case. Limit: 32 KB."
          },
          "IsClosed": {
            "type": "boolean",
            "description": "Indicates whether the case is closed (true) or open (false). This field is controlled by the Status field; it can't be set directly. Label is Closed."
          },
          "ClosedDate": {
            "type": "string",
            "description": "The date and time when the case was closed.",
            "format": "date-time"
          },
          "IsEscalated": {
            "type": "boolean",
            "description": "Indicates whether the case has been escalated (true) or not. A case's escalated state does not affect how you can use a case, or whether you can query, delete, or update it. You can set this flag via the API. Label is Escalated."
          },
          "OwnerId": {
            "type": "string",
            "description": "ID of the contact who owns the case."
          },
          "IsClosedOnCreate": {
            "type": "boolean",
            "description": "Indicates whether the case was closed at the same time that it was created (true) or not (false). This flag is read-only and is automatically set when a record is created. It can't be set to true unless the IsClosed flag is also true."
          },
          "CreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedById": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "LastModifiedById": {
            "type": "string"
          },
          "SystemModstamp": {
            "type": "string",
            "format": "date-time"
          },
          "ContactPhone": {
            "type": "string",
            "description": "Telephone number for the contact. Label is Contact Phone. This field is available in API version 38.0 and later."
          },
          "ContactMobile": {
            "type": "string",
            "description": "Mobile telephone number for the contact. Label is Contact Mobile. This field is available in API version 38.0 and later."
          },
          "ContactEmail": {
            "type": "string",
            "description": "Email address for the contact. The Case.ContactEmail field displays the Email field on the contact that is referenced by Case.ContactId. Label is Contact Email. This field is available in API version 38.0 and later."
          },
          "ContactFax": {
            "type": "string",
            "description": "Fax number for the contact. Label is Contact Fax. This field is available in API version 38.0 and later."
          },
          "Comments": {
            "type": "string",
            "description": "Used to insert a new CaseComment. Email textarea has a length of 4000 chars."
          },
          "LastViewedDate": {
            "type": "string",
            "description": "The timestamp when the current user last viewed this record or list view. If this value is null, the user might have only accessed this record or list view (LastReferencedDate) but not viewed it.",
            "format": "date-time"
          },
          "LastReferencedDate": {
            "type": "string",
            "description": "The timestamp when the current user last accessed this record, a record related to this record, or a list view.",
            "format": "date-time"
          },
          "Abono__c": {
            "type": "string"
          },
          "Agencia__c": {
            "type": "string"
          },
          "Agrupacion__c": {
            "type": "string"
          },
          "Area_Nivel_3__c": {
            "type": "string"
          },
          "Canal_Venta__c": {
            "type": "string"
          },
          "Cargo_Agencia__c": {
            "type": "string"
          },
          "Carta_Incidencia__c": {
            "type": "string"
          },
          "Caso_Reportado_por__c": {
            "type": "string"
          },
          "Comentario_externo__c": {
            "type": "string"
          },
          "Delegado__c": {
            "type": "string"
          },
          "Destinatario_Mercancia__c": {
            "type": "string"
          },
          "Devolucion__c": {
            "type": "string"
          },
          "Direccion_contacto_caso__c": {
            "type": "string"
          },
          "Email_contacto_caso__c": {
            "type": "string"
          },
          "Email_de_email_to_case__c": {
            "type": "string"
          },
          "Entrega_Parcial__c": {
            "type": "string"
          },
          "Entrega_Reposicion__c": {
            "type": "string"
          },
          "Entrega__c": {
            "type": "string"
          },
          "Estado_Cliente__c": {
            "type": "string"
          },
          "Estado_Interno__c": {
            "type": "string"
          },
          "Expedicion__c": {
            "type": "string"
          },
          "Factura__c": {
            "type": "string"
          },
          "ID_MirrorDestination__c": {
            "type": "string"
          },
          "ID_SAP_Cuenta__c": {
            "type": "string"
          },
          "ID_SAP_Destinatario_Mercanc_a__c": {
            "type": "string"
          },
          "Lead__c": {
            "type": "string"
          },
          "Marca__c": {
            "type": "string"
          },
          "MyExtID__c": {
            "type": "string"
          },
          "Nombre_contacto_caso__c": {
            "type": "string"
          },
          "Pedido__c": {
            "type": "string"
          },
          "Problema_reportado__c": {
            "type": "string"
          },
          "Referencia_SAP__c": {
            "type": "string"
          },
          "Referencia__c": {
            "type": "string"
          },
          "ASIN__c": {
            "type": "string"
          },
          "Remesa__c": {
            "type": "string"
          },
          "Resuelto_por__c": {
            "type": "string"
          },
          "SLA__c": {
            "type": "string"
          },
          "Serie__c": {
            "type": "string"
          },
          "Soporte_Logistica__c": {
            "type": "string"
          },
          "Soporte_Nivel_1__c": {
            "type": "string"
          },
          "Soporte_Nivel_2__c": {
            "type": "string"
          },
          "Soporte_Nivel_3__c": {
            "type": "string"
          },
          "Subtipo__c": {
            "type": "string"
          },
          "Telefono_contacto_caso__c": {
            "type": "string"
          },
          "Tiempo_de_gestion__c": {
            "type": "number"
          },
          "Tienda__c": {
            "type": "string"
          },
          "Tipificacion__c": {
            "type": "string"
          },
          "Tipo_Cuenta__c": {
            "type": "string"
          },
          "Visibilidad_Cliente__c": {
            "type": "string"
          },
          "Correos_entrada__c": {
            "type": "string"
          },
          "Dia_de_la_semana__c": {
            "type": "number"
          },
          "Correos_entrada_AT__c": {
            "type": "string"
          },
          "Emails_entrada__c": {
            "type": "string"
          },
          "ReferenciaCaso__c": {
            "type": "string"
          },
          "Org_Ventas__c": {
            "type": "string"
          },
          "EMB_Country__c": {
            "type": "string"
          },
          "EMB_PharmacovigilanceId__c": {
            "type": "string"
          },
          "EMB_Specialty__c": {
            "type": "string"
          },
          "EMB_Statement__c": {
            "type": "boolean"
          },
          "EMB_Challenge__c": {
            "type": "string"
          },
          "EMB_Batch__c": {
            "type": "string"
          },
          "EMB_BusinessUnit__c": {
            "type": "string"
          },
          "EMB_ResponseTo__c": {
            "type": "string"
          },
          "EMB_StatusLevel1__c": {
            "type": "string"
          },
          "EMB_StatusLevel2__c": {
            "type": "string"
          },
          "Referencia_aplicada__c": {
            "type": "string"
          },
          "Amazon_Site__c": {
            "type": "string"
          },
          "Brand__c": {
            "type": "string"
          },
          "Num_of_comments__c": {
            "type": "number"
          },
          "Photo_1__c": {
            "type": "string"
          },
          "Question_URL__c": {
            "type": "string"
          },
          "Rating__c": {
            "type": "number"
          },
          "Reference_Id__c": {
            "type": "string"
          },
          "Review_Rating__c": {
            "type": "number"
          },
          "Review_Response__c": {
            "type": "string"
          },
          "Review_URL__c": {
            "type": "string"
          },
          "Review_or_Question_Date__c": {
            "type": "string",
            "format": "date"
          },
          "Reviewer__c": {
            "type": "string"
          },
          "Transaction_Date__c": {
            "type": "string",
            "format": "date"
          },
          "Verified_Purchase__c": {
            "type": "boolean"
          },
          "photo_2__c": {
            "type": "string"
          },
          "revue__ASIN__c": {
            "type": "string"
          },
          "revue__Consumer_Name__c": {
            "type": "string"
          },
          "revue__Domain__c": {
            "type": "string"
          },
          "revue__External_Id__c": {
            "type": "string"
          },
          "revue__External_Reference_Id__c": {
            "type": "string"
          },
          "revue__Origin_Icon__c": {
            "type": "string"
          },
          "revue__Place__c": {
            "type": "string"
          },
          "revue__Product_Image__c": {
            "type": "string"
          },
          "revue__Product__c": {
            "type": "string"
          },
          "revue__Question__c": {
            "type": "string"
          },
          "revue__Rating__c": {
            "type": "string"
          },
          "revue__Review_Origin_Icon__c": {
            "type": "string"
          },
          "revue__Review_Rating__c": {
            "type": "string"
          },
          "revue__Review__c": {
            "type": "string"
          },
          "revue__Reviewer_Name__c": {
            "type": "string"
          },
          "revue__Star_Rating__c": {
            "type": "string"
          },
          "revue__Store_Number__c": {
            "type": "string"
          },
          "revue__iTunes_App_Id__c": {
            "type": "string"
          },
          "ChatSubject__c": {
            "type": "string"
          },
          "Order_Date__c": {
            "type": "string",
            "format": "date-time"
          },
          "Queja__c": {
            "type": "boolean"
          },
          "Shipping_Method__c": {
            "type": "string"
          },
          "Social_Media_Contact_Case__c": {
            "type": "string"
          },
          "QR_Code__c": {
            "type": "string"
          },
          "NoSurvey__c": {
            "type": "boolean"
          },
          "FromSalesRep__c": {
            "type": "boolean"
          },
          "EmailAccount__c": {
            "type": "string"
          },
          "Name_Account__c": {
            "type": "string"
          },
          "SAM_Email__c": {
            "type": "string"
          },
          "SC_Safety_ID__c": {
            "type": "string"
          },
          "C_digo_Nacional__c": {
            "type": "string"
          },
          "Codigo_Nacional_Texto__c": {
            "type": "string"
          },
          "Replacement__c": {
            "type": "string"
          },
          "Refund__c": {
            "type": "string"
          },
          "talkdesk__Auto_Pop_up_Case__c": {
            "type": "boolean"
          },
          "talkdesk__Pop_Up_Destination__c": {
            "type": "string"
          },
          "Manager_Email__c": {
            "type": "string"
          },
          "Comentarios__c": {
            "type": "string"
          },
          "Technical_error__c": {
            "type": "boolean"
          },
          "Data_missing__c": {
            "type": "boolean"
          },
          "Hashtag__c": {
            "type": "string"
          },
          "LAM_Segment_de_la_Account__c": {
            "type": "string"
          },
          "Product_WTC__c": {
            "type": "string"
          },
          "Experience__c": {
            "type": "string"
          },
          "saved_component__c": {
            "type": "boolean"
          },
          "OrigenIntegracion__c": {
            "type": "string"
          },
          "spr_sf__Sprinklr_Case_Number__c": {
            "type": "number"
          },
          "SprinklrCategory__c": {
            "type": "string"
          },
          "Account_Black_List__c": {
            "type": "boolean"
          },
          "Client_Potential__c": {
            "type": "string"
          },
          "CombinedEmailSummary__c": {
            "type": "string",
            "description": "Summary of all emails associated with the case"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          }
        },
        "description": "Represents a case, which is a customer issue or problem."
      },
      "CaseSObject_attributes": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "ErrorInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "extendedErrorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "extendedErrorCode": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "RestApiError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SaveResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "statusCode": {
                  "type": "string"
                },
                "extendedErrorDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "extendedErrorCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "statusCode": {
                  "type": "string"
                },
                "extendedDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "extendedErrorCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "infos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "statusCode": {
                  "type": "string"
                },
                "extendedDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "extendedErrorCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ErrorInfo_extendedErrorDetails": {
        "type": "object",
        "properties": {
          "extendedErrorCode": {
            "type": "string"
          }
        }
      },
      "SaveResult_errors": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statusCode": {
            "type": "string"
          },
          "extendedErrorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "extendedErrorCode": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SaveResult_warnings": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "extendedDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "extendedErrorCode": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "OAuth 2.0 grant type for client credentials.",
            "example": "client_credentials"
          },
          "client_id": {
            "type": "string",
            "description": "Salesforce connected app Client ID.",
            "example": "your-client-id"
          },
          "client_secret": {
            "type": "string",
            "description": "Salesforce connected app Client Secret.",
            "example": "your-client-secret"
          },
          "scope": {
            "type": "string",
            "description": "Scopes required for the access token. \nOptional; leave empty for default permissions.\n",
            "example": "api refresh_token"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token for making API calls.",
            "example": "00D000000000XYZ!AR0AQJ5NGR76vQFv..."
          },
          "instance_url": {
            "type": "string",
            "description": "The Salesforce instance URL to make API requests.",
            "example": "https://your-instance.salesforce.com"
          },
          "token_type": {
            "type": "string",
            "description": "Type of the token (e.g., Bearer).",
            "example": "Bearer"
          },
          "issued_at": {
            "type": "string",
            "description": "Timestamp when the token was issued (in milliseconds).",
            "example": "1609459200000"
          },
          "scope": {
            "type": "string",
            "description": "Scopes associated with the access token.",
            "example": "api refresh_token"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code.",
            "example": "invalid_client"
          },
          "error_description": {
            "type": "string",
            "description": "Human-readable error description.",
            "example": "Client authentication failed."
          }
        }
      }
    },
    "securitySchemes": {
      "oAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://embraceisdin--sbfull.sandbox.my.salesforce.com/services/oauth2/authorize",
            "tokenUrl": "https://embraceisdin--sbfull.sandbox.my.salesforce.com/services/oauth2/token",
            "scopes": {
              "refresh_token": "Allows a refresh token to be returned when the requesting client is eligible to receive one. With a refresh token, the app can interact with the user’s data while the user is offline. This token is synonymous with requesting offline_access.",
              "api": "Allows access to the current, logged-in user’s account using APIs, such as REST API and Bulk API. This scope also includes chatter_api, which allows access to Connect REST API resources."
            }
          }
        }
      }
    }
  }
}
